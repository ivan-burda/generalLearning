Redux Middleware
What I love about Redux middleware is it gives you the tools and lets you decide what you want to build with them. What I love about the JavaScript ecosystem is odds are, if you need something done, there’s a package for it.

Here are some popular packages in the Redux ecosystem that are implemented via middleware.

redux-api-middleware: Redux middleware for calling an API.
redux-logger: Logger middleware for Redux.
redux-promise-middleware: Redux middleware for resolving and rejecting promises with conditional optimistic updates.
redux-thunk: Thunk middleware for Redux.
redux-logic: Redux middleware for organizing business logic and action side effects.
redux-observable: RxJS middleware for action side effects in Redux using “Epics”.
redux-test-recorder: Redux middleware to automatically generate tests for reducers through ui interaction.
redux-reporter: Report actions & metadata to 3rd party providers, extremely useful for analytics and error handling (New Relic, Sentry, Adobe DTM, Keen, etc.)
redux-localstorage: Store enhancer that syncs (a subset) of your Redux store state to localStorage.
redux-node-logger: A Redux Logger for Node Environments
redux-catch: Error catcher middleware
redux-cookies-middleware: a Redux middleware which syncs a subset of your Redux store state with cookies.
redux-test-recorder: Redux test recorder is a redux middleware + included component for automagically generating tests for your reducers based on the actions in your app