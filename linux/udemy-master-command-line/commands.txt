=======I/O REDIRECTING
echo 
man 1 man or just man man -> opens information about the manual
man -k ls -> searches the manual for anything such as ls 
man 1 ls -> opens the manual page about any of the terms returned by the search 

xargs -> converts a standard output into a command parameter so that it can be consumed by a piped comand which does not accept standard outputs but only command line arguments

Task1: 
ls /etc 1> file1.txt 
ls /run 1> file2. txt 

Task2: 
cat file1.txt file2.txt | tee unsorted.txt | sort -r 1> reversed.txt 


=======CHECKING A FILE 
file ourarchive.tar = prints info about what kind of file it is. In linux the extensions are irrelevant, so we cannot rely on them to judge the file type 


=======WILDCARDS 
*.txt
D*
file?.txt 
file??.txt 
file[A-Z].txt, A-D, a-z, 123abc, 1-9, etc.
file[0-9][A-Z][a-z][0,1]
file*.txt -> will match file with anything after it and followed by .txt 

=======CREATING FILES AND DIRECTORIES 
Brace expansion: {}
Range: x..y
touch 
mkdir 
touch ~/Documents/myfile.txt
mkdir ~/Pictures/holiday
mkdir ~/Pictures/holiday/Rakousko/Strobl -> this will create also subfolders 
mkdir {ivan,stepan,zdenek}_{hobbies,photos} -> will create hobbies and photos folders for each of the brothers
mkdir {ivan,stepan,zdenek}_{1..5} -> .. is used for a range 
touch {ivan,stepan,zdenek}_{1..5}/file{1..10}.txt -> will create 10 txt files in each of the folders 
ls -al {ivan,stepan}_{1..2} -> will list files in all the matched folders

=======DELETING 
rm -r myfolder = deletes the folder and all its content 
rm -ri myfolder = asks for a permission to delete 
rmdir delfolder/* = delete everything inside of the delfolder; however it deletes only empty folder 
rmdir delfolder = delete the delfolder itself; however, this will work only if it is empty 

=======COPYING 
cp ~/Documents/file1.txt file2.txt = copies the content of file1 to file2; If I am already in Documents, then without ~/Documents/
cp file1.txt file2.txt myfolder/ ; cp file* myfolder/ 
cp -r copy-me/ destination/  = copies a folder and also its content (r = recursively) into another folder

=======RENAMING AND MOVING 
mv oldname.txt newname.txt
mv oldfolder/ newfolder/
mv newfolder/* . = moves everything in newfolder to the current location 
mv newfolder/ ~/Documents/
mv ~/Documents/myfolder/ ~/Desktop/jackpot = moves myfolder to the desktop and renames it to jackpot 

=======EDITING AND CREATING FILES with NANO
nano mynewtextfile.txt = creates a new file 
nano myexistingfile.txt = opens an existing file 
sudo nano /etc/nanorc = editing nano settings; this requires admin rights therefore sudo 

=======LOCATE
sudo apt install locate 
sudo apt install mlocate 

locate *.conf 
locate *.txt 
locate -i *.TXT = -i stands for case insensitive
locate --limit 3 *.txt = --limit returns just 3 results 
locate -S = returns information about the database 
locate -e (--existing) = makes sure the files in the db really still exist 
sudo updatedb = updates database of files so that we get uptodate results when using locate 


=======FIND 
find = list all files in the current or the specified dir; goes as deep as possible 
find . -maxdepth 1 = find all files from this location in the max depth 1
find . -type f = list all files in the contained folders 
find . -type d = list all contained folders
find . -maxdepth 2 -type f
find /etc -maxdepth 2 -type d 
find . -name "searchedFile.txt" = searches for the location of a specific file anywhere deeper 
find . -maxdepth 2 -name "*.txt"
-iname = searches by name but in the case-insensitive way 

find / -type f -size +100k = returns all files on the drive bigger than 100kb
find / -type f -size +100k  -size -5M = bigger that 100k but smaller than 5M
find / -type f -size +100k  -size -5M | wc -l = will count the lines 
find / -type f -size -100k -o -size +5M = -o means or

=======DO SOMETHING WITH EVERY FILE AFTER THE FIND
sudo find / -type f -size +100k -size -5M -exec cp {} ~/Desktop/my_folder
exec = asks for executing a command on each involved (found) file \;
ok = can be used instead of exec, however, will ask for a confirmation of every operation
cp {} = copy each
\; = finish after you are done with all 

touch haystack/folder$(shuf -i 1-500 -n 1)/needle.txt = creates a needle.txt file in a random folder
find haystack/ -type f -name "needle.txt" -exec mv {} ~/Desktop \;


=======CONCATENATING FILES, VIEWING FILES 
cat myfile.txt = will print the content of the file 
cat file[1-5].txt > fullmessage.txt = will concatenate the files into a new file 
echo "Abc" >> fullmessage.txt = this will append the abc into the existing content, rather than overwriting it 
cat file[1-5].txt | tac = will print the lines from individual files in reversed order 
tac fullmessage.txt = will print the lines of the file in a reversed order
cat file[1-5].txt | rev = will reverse individual lines of a file horizontally 
less mylongfile.txt = opens the file in the terminal but allows comfortable scrolling by using arrows; use "q" to close the file 
cat mylongfile.txt | less = the less can also be used as a pipe 

find / -maxdepth 5 -name "*.txt" | less = allows nice reading and arrow scrolling of the results 
cat mylongfile.txt | head -n 3 = will show just the first 3 lines of the file; if -n is not used, it will show by default first 10 lines 
| tail = from the end of the file 

head -n 20 mylongfile.txt 

head -n 20 mylongfile.txt | tail -n 3 = this will return last 3 lines from the first 20 lines 


=======SORTING 
sort names.txt
sort names.txt > sorted.txt 
sort -r names.txt  = reversed sort
sort -n numbers.txt = sorts numbers 
sort -nr numbers.txt = sort numbers in the reversed order
sort -u numbers.txt = sorts and removes duplicities 
sort -ru numbers.txt = sorts numbers and removes duplicities

=======ADVANCED SORTING 
ls -l /etc | head -n 20 | sort -k 5n = we pipe the results of ls into the sort function 
-k = key value by which to sort; 5 = by the column number 5; it is a number values so also: n 
-6M = if we are sorting by date (e.g. in the 6th column) and add M, then the sorting will be done by month 
sudo find / -maxdepth 4 -type f -size +1M -exec ls -lh {} \; | sort -k 5nr > filesizes.txt 
5n = 5th column, number format 
5h = 5th column, human-readable number format 


=======SEARCHING FILE CONTENT 
grep e mytext.txt 
grep -i anna annakarenina.txt = looks up for all occurrences of the word "anna", the -i applies case-insensitive searching
wc -l mytext.txt = counts the number of lines 
grep -i "our boys" annakarenina.txt = searching for a string 

grep -c gadsby gadsby.txt = -c counts the results
grep -ic gadsby gadsby.txt = i is used for case insensitive searchingg
grep -v gadsby gadsby.txt = -v is used to get a number of lines which do not contain something 

ls hellofolder/ | grep hello.txt = tells me whether hello.txt is contained among the result of ls by returning it or not 
ls -lF / | grep root = returns all ls results which contain "root", so grep is great for filtering results 

ls -F /etc | grep -v / = highlight all folders in the /etc and then use grep to return all results which do not have / in their name, i.e. which are not folders 

ls -F /etc | grep -v / | sort -r > file.txt

man -l print | grep -v 1 | sort | less

=======ARCHIVING & COMPRESSING FILES 
tar -cvf myarchive.tar file[1-3].txt
-c = create
-v = verbose, i.e. inform me about what you are doing
-f = accept files

tar -tf myarchive.tar = shows the content of a tarball archive without extracting it 
-t = test 
-f = file

tar -xvf myarchive.tar = extracts an archive 
-x = extract 
-f = file 
-v = verbose 

gzip = faster, less compression power
bzip2 = slower, more compression power

gzip myarchive.tar
gunzip myarchive.tar.gz

bzip2 myarchive.tar 
bunzip2 myarchive.tar.bz2 

zip myziparchive file[1-3].txt
unzip myziparchive.zip 

Archive & compress at once 
tar -cvzf ourarchive.tar.gz file{1-3}.txt 
-z = gzip the file as well; make sure that just for convention the .gz extension is added to the filename 
-j = bzip2 the file

Extract and unpack the archive at once 
tar -xvzf ourarchive.tar.gz (from gzip)
tar -xvjf ourarchive.tar.bz2 (from bzip2)

TASKS: 
1)
mkdir super_secret_stuff 
echo "Secret message" > ~/Desktop/super_secret_stuff/top_secret.txt
sudo updatedb 
locate top_secret.txt > ~/secret_place.txt

2)
sudo find / -maxdepth 4 -type f -size +1M
sudo find / -maxdepth 4 -type f -size +1M -exec ls -lh {} \;
sudo find / -maxdepth 4 -type f -size +1M -exec ls -lh {} \; | sort -k 5nr > filesizes.txt 